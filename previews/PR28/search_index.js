var documenterSearchIndex = {"docs":
[{"location":"code_base_developer_guide/developer/#Guidelines-for-Developers","page":"Developer Guide","title":"Guidelines for Developers","text":"","category":"section"},{"location":"code_base_developer_guide/developer/","page":"Developer Guide","title":"Developer Guide","text":"In order to contribute to StorageSystemsSimulations.jl repository please read the following sections of InfrastructureSystems.jl documentation in detail:","category":"page"},{"location":"code_base_developer_guide/developer/","page":"Developer Guide","title":"Developer Guide","text":"Style Guide\nContributing Guidelines","category":"page"},{"location":"code_base_developer_guide/developer/","page":"Developer Guide","title":"Developer Guide","text":"Pull requests are always welcome to fix bugs or add additional modeling capabilities.","category":"page"},{"location":"code_base_developer_guide/developer/","page":"Developer Guide","title":"Developer Guide","text":"All the code contributions need to include tests with a minimum coverage of 70%","category":"page"},{"location":"quick_start_guide/#Quick-Start-Guide","page":"Quick Start Guide","title":"Quick Start Guide","text":"","category":"section"},{"location":"quick_start_guide/","page":"Quick Start Guide","title":"Quick Start Guide","text":"Julia: If this is your first time using Julia visit our Introduction to Julia and the officialGetting started with Julia.\nPackage Installation: If you want to install packages check the Package Manager instructions, or you can refer to the PowerSimulations installation instructions.\nPowerSystems: PowerSystems.jl manages the data and is a fundamental dependency of PowerSimulations.jl. Check the Understanding PowerSystems.jl page and PowerSystems.jl documentation to understand how the inputs to the models are organized.\nDataset Library: If you don't have a data set to start using PowerSimulations.jl check the test systems provided in PowerSystemCaseBuilder.jl","category":"page"},{"location":"quick_start_guide/","page":"Quick Start Guide","title":"Quick Start Guide","text":"tip: Tip\nIf you need to develop a dataset for a simulation check the tutorials on how to parse data and attach time series","category":"page"},{"location":"quick_start_guide/","page":"Quick Start Guide","title":"Quick Start Guide","text":"Tutorial: If you are eager to run your first simulation visit the Solve a Day Ahead Market Scheduling Problem using PowerSimulations.jl tutorial","category":"page"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations","page":"API Reference","title":"StorageSystemsSimulations","text":"","category":"section"},{"location":"api/StorageSystemsSimulations/","page":"API Reference","title":"API Reference","text":"CurrentModule = StorageSystemsSimulations\nDocTestSetup  = quote\n    using StorageSystemsSimulations\nend","category":"page"},{"location":"api/StorageSystemsSimulations/","page":"API Reference","title":"API Reference","text":"API documentation","category":"page"},{"location":"api/StorageSystemsSimulations/","page":"API Reference","title":"API Reference","text":"Pages = [\"StorageSystemsSimulations.md\"]","category":"page"},{"location":"api/StorageSystemsSimulations/#Index","page":"API Reference","title":"Index","text":"","category":"section"},{"location":"api/StorageSystemsSimulations/","page":"API Reference","title":"API Reference","text":"Pages = [\"StorageSystemsSimulations.md\"]","category":"page"},{"location":"api/StorageSystemsSimulations/#Exported","page":"API Reference","title":"Exported","text":"","category":"section"},{"location":"api/StorageSystemsSimulations/","page":"API Reference","title":"API Reference","text":"Modules = [StorageSystemsSimulations]\nPrivate = false\nFilter = t -> typeof(t) === DataType ? !(t <: Union{StorageSystemsSimulations.AbstractStorageFormulation}) : true","category":"page"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.EnergyLimitFeedforward","page":"API Reference","title":"StorageSystemsSimulations.EnergyLimitFeedforward","text":"Adds a constraint to limit the sum of a variable over the number of periods to the source value\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.EnergyTargetFeedforward","page":"API Reference","title":"StorageSystemsSimulations.EnergyTargetFeedforward","text":"Adds a constraint to enforce a minimum energy level target with a slack variable associated witha penalty term.\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.StorageEnergyOutput","page":"API Reference","title":"StorageSystemsSimulations.StorageEnergyOutput","text":"Auxiliary Variable for Storage Models that solve for total energy output\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.StorageEnergyShortageVariable","page":"API Reference","title":"StorageSystemsSimulations.StorageEnergyShortageVariable","text":"Struct to dispatch the creation of a slack variable for energy storage levels < target storage levels\n\nDocs abbreviation: E^shortage\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.StorageEnergySurplusVariable","page":"API Reference","title":"StorageSystemsSimulations.StorageEnergySurplusVariable","text":"Struct to dispatch the creation of a slack variable for energy storage levels > target storage levels\n\nDocs abbreviation: E^surplus\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#Internal","page":"API Reference","title":"Internal","text":"","category":"section"},{"location":"api/StorageSystemsSimulations/","page":"API Reference","title":"API Reference","text":"Modules = [StorageSystemsSimulations]\nPublic = false","category":"page"},{"location":"api/StorageSystemsSimulations/#StorageSystemsSimulations.EnergyLimitParameter","page":"API Reference","title":"StorageSystemsSimulations.EnergyLimitParameter","text":"Parameter to define energy limit\n\n\n\n\n\n","category":"type"},{"location":"api/StorageSystemsSimulations/#PowerSimulations.add_constraints!-Union{Tuple{X}, Tuple{V}, Tuple{PowerSimulations.OptimizationContainer, Type{PowerSimulations.EnergyBalanceConstraint}, InfrastructureSystems.FlattenIteratorWrapper{V}, PowerSimulations.DeviceModel{V, StorageDispatchWithReserves}, PowerSimulations.NetworkModel{X}}} where {V<:Storage, X<:PowerModels.AbstractPowerModel}","page":"API Reference","title":"PowerSimulations.add_constraints!","text":"add_constraints!(\n    container::PowerSimulations.OptimizationContainer,\n    _::Type{PowerSimulations.EnergyBalanceConstraint},\n    devices::InfrastructureSystems.FlattenIteratorWrapper{V<:Storage},\n    model::PowerSimulations.DeviceModel{V<:Storage, StorageDispatchWithReserves},\n    network_model::PowerSimulations.NetworkModel{X<:PowerModels.AbstractPowerModel}\n)\n\n\nAdd Energy Balance Constraints for AbstractStorageFormulation\n\n\n\n\n\n","category":"method"},{"location":"api/StorageSystemsSimulations/#PowerSimulations.add_constraints!-Union{Tuple{X}, Tuple{V}, Tuple{PowerSimulations.OptimizationContainer, Type{ReserveDischargeConstraint}, InfrastructureSystems.FlattenIteratorWrapper{V}, PowerSimulations.DeviceModel{V, StorageDispatchWithReserves}, PowerSimulations.NetworkModel{X}}} where {V<:Storage, X<:PowerModels.AbstractPowerModel}","page":"API Reference","title":"PowerSimulations.add_constraints!","text":"add_constraints!(\n    container::PowerSimulations.OptimizationContainer,\n    _::Type{ReserveDischargeConstraint},\n    devices::InfrastructureSystems.FlattenIteratorWrapper{V<:Storage},\n    model::PowerSimulations.DeviceModel{V<:Storage, StorageDispatchWithReserves},\n    network_model::PowerSimulations.NetworkModel{X<:PowerModels.AbstractPowerModel}\n)\n\n\nAdd Energy Balance Constraints for AbstractStorageFormulation\n\n\n\n\n\n","category":"method"},{"location":"api/StorageSystemsSimulations/#PowerSimulations.add_feedforward_constraints!-Union{Tuple{T}, Tuple{PowerSimulations.OptimizationContainer, PowerSimulations.DeviceModel, InfrastructureSystems.FlattenIteratorWrapper{T}, EnergyLimitFeedforward}} where T<:Component","page":"API Reference","title":"PowerSimulations.add_feedforward_constraints!","text":"add_feedforward_constraints!(\n    container::PowerSimulations.OptimizationContainer,\n    _::PowerSimulations.DeviceModel,\n    devices::InfrastructureSystems.FlattenIteratorWrapper{T<:Component},\n    ff::EnergyLimitFeedforward\n)\n\n\n    add_feedforward_constraints(container::OptimizationContainer,\n                    cons_name::Symbol,\n                    param_reference,\n                    var_key::VariableKey)\n\nConstructs a parameterized integral limit constraint to implement feedforward from other models. The Parameters are initialized using the upper boundary values of the provided variables.\n\nsum(variable[var_name, t] for t in 1:affected_periods)/affected_periods <= param_reference[var_name]\n\nLaTeX\n\nsum_t x leq param^max\n\nArguments\n\ncontainer::OptimizationContainer : the optimization_container model built in PowerSimulations\nmodel::DeviceModel : the device model\ndevices::IS.FlattenIteratorWrapper{T} : list of devices\nff::FixValueFeedforward : a instance of the FixValue Feedforward\n\n\n\n\n\n","category":"method"},{"location":"api/StorageSystemsSimulations/#PowerSimulations.add_feedforward_constraints!-Union{Tuple{U}, Tuple{T}, Tuple{PowerSimulations.OptimizationContainer, PowerSimulations.DeviceModel{T, U}, InfrastructureSystems.FlattenIteratorWrapper{T}, EnergyTargetFeedforward}} where {T<:Storage, U<:StorageSystemsSimulations.AbstractStorageFormulation}","page":"API Reference","title":"PowerSimulations.add_feedforward_constraints!","text":"add_feedforward_constraints!(\n    container::PowerSimulations.OptimizationContainer,\n    _::PowerSimulations.DeviceModel{T<:Storage, U<:StorageSystemsSimulations.AbstractStorageFormulation},\n    devices::InfrastructureSystems.FlattenIteratorWrapper{T<:Storage},\n    ff::EnergyTargetFeedforward\n)\n\n\n    add_feedforward_constraints(\n        container::OptimizationContainer,\n        ::DeviceModel,\n        devices::IS.FlattenIteratorWrapper{T},\n        ff::EnergyTargetFeedforward,\n    ) where {T <: PSY.Component}\n\nConstructs a equality constraint to a fix a variable in one model using the variable value from other model results.\n\nvariable[var_name, t] + slack[var_name, t] >= param[var_name, t]\n\nLaTeX\n\nx + slack = param\n\nArguments\n\ncontainer::OptimizationContainer : the optimization_container model built in PowerSimulations\nmodel::DeviceModel : the device model\ndevices::IS.FlattenIteratorWrapper{T} : list of devices\nff::EnergyTargetFeedforward : a instance of the EnergyTarget Feedforward\n\n\n\n\n\n","category":"method"},{"location":"api/StorageSystemsSimulations/#PowerSimulations.get_min_max_limits-Tuple{Storage, Type{StateofChargeLimitsConstraint}, Type{<:StorageSystemsSimulations.AbstractStorageFormulation}}","page":"API Reference","title":"PowerSimulations.get_min_max_limits","text":"get_min_max_limits(\n    d::Storage,\n    _::Type{StateofChargeLimitsConstraint},\n    _::Type{<:StorageSystemsSimulations.AbstractStorageFormulation}\n) -> NamedTuple{(:min, :max), <:Tuple{Any, Any}}\n\n\nMin and max limits for Energy Capacity Constraint and AbstractStorageFormulation\n\n\n\n\n\n","category":"method"},{"location":"#StorageSystemsSimulations.jl","page":"Welcome Page","title":"StorageSystemsSimulations.jl","text":"","category":"section"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"CurrentModule = StorageSystemsSimulations","category":"page"},{"location":"#Installation","page":"Welcome Page","title":"Installation","text":"","category":"section"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"The latest stable release of StorageSystemsSimulations can be installed using the Julia package manager with","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"","category":"page"},{"location":"","page":"Welcome Page","title":"Welcome Page","text":"StorageSystemsSimulations has been developed as part of the Scalable Integrated Infrastructure Planning (SIIP) initiative at the U.S. Department of Energy's National Renewable Energy Laboratory (NREL).","category":"page"},{"location":"formulation_library/StorageDispatchWithReserves/#StorageDispatchWithReserves-Formulation","page":"StorageDispatchWithReserves","title":"StorageDispatchWithReserves Formulation","text":"","category":"section"},{"location":"formulation_library/StorageDispatchWithReserves/","page":"StorageDispatchWithReserves","title":"StorageDispatchWithReserves","text":"StorageDispatchWithReserves","category":"page"},{"location":"formulation_library/StorageDispatchWithReserves/#StorageSystemsSimulations.StorageDispatchWithReserves","page":"StorageDispatchWithReserves","title":"StorageSystemsSimulations.StorageDispatchWithReserves","text":"Formulation type to add storage formulation than can provide ancillary services.\n\nThe formulation supports the following attributes. See Documentation for more details.\n\nDeviceModel(\n    StorageType, # E.g. BatteryEMS or GenericStorage\n    StorageDispatchWithReserves;\n    attributes=Dict(\n        \"reservation\" => true,\n        \"cycling_limits\" => false,\n        \"energy_target\" => false,\n        \"complete_coverage\" => false,\n        \"regularization\" => true,\n    ),\n)\n\n\n\n\n\n","category":"type"},{"location":"formulation_library/StorageDispatchWithReserves/#Sets","page":"StorageDispatchWithReserves","title":"Sets","text":"","category":"section"},{"location":"formulation_library/StorageDispatchWithReserves/","page":"StorageDispatchWithReserves","title":"StorageDispatchWithReserves","text":"beginalign*\n    mathcalP^textas_textup  textUp Ancillary Service Products Set\n    mathcalP^textas_textdn  textDown Ancillary Service Products Set\n    mathcalP^textas = bigcupleft mathcalP^textas_textup mathcalP^textas_textdnright  textAncillary Service Products Set\n    mathcalT = 1dotsT  textTime steps \nendalign*","category":"page"},{"location":"formulation_library/StorageDispatchWithReserves/#Parameters","page":"StorageDispatchWithReserves","title":"Parameters","text":"","category":"section"},{"location":"formulation_library/StorageDispatchWithReserves/","page":"StorageDispatchWithReserves","title":"StorageDispatchWithReserves","text":"beginalign*\n    P^maxch_st textMax Charge Power Storage MW\n    P^maxds_st textMax Discharge Power Storage MW\n    eta^ch_st textCharge Efficiency Storage hr\n    eta^ds_st textDischarge Efficiency Storage hr\n    textVOM textStorage Variable Operation and Maintenance Cost MWh\n    rho^e+ textStorage Surplus penalty at end of target cost MWh\n    rho^e- textStorage Shortage penalty at end of target cost MWh\n    rho^c textStorage Cycling Penalty MWh\n    rho^z textRegularization Terms Penalty\n    R^*_p t textAncillary Service deployment Forecast at time t for service p in mathcalP^textas MW\n    E^max_st textMax Energy Storage Capacity MWh\n    E^st_0 textStorage initial energy MWh\n    E^st_T textStorage Energy Target at the end of the horizon ie time-step T MWh\n    Delta t  textTimestep length\n    C_st  textMaximum number of cycles over the horizon \n     textFor DA the value is fixed to 3 and in RT the value depends on the DA allocation of cycles \n    N_p  textNumber of periods of compliance to supply an AS\n     textFor example Spinning reserve has 12 for 1 hour of compliance when Delta_t is 5-minutes\nendalign*","category":"page"},{"location":"formulation_library/StorageDispatchWithReserves/#Variables","page":"StorageDispatchWithReserves","title":"Variables","text":"","category":"section"},{"location":"formulation_library/StorageDispatchWithReserves/","page":"StorageDispatchWithReserves","title":"StorageDispatchWithReserves","text":"beginalign*\n    p^st ch_t   in 0 P^maxch_st quadtextExpected Storage charging power\n    p^st ds_t   in 0 P^maxds_st quadtextExpected Storage discharging power\n    e^st_t   in 0 E^max_st quad textExpected Storage Energy\n    textss^st_t   in  0 1  quad textChargeDischarge status Storage\n    sb_stcpt  in 0 P^maxch_st  quad textAncillary service fraction assigned to Storage Charging\n    sb_stdpt  in 0 P^maxds_st  quad textAncillary service fraction assigned to Storage Discharging\n    e^st+   in 0 E^max_st quad textStorage Energy Surplus above target\n    e^st-   in 0 E^max_st quad textStorage Energy Shortage below target\n    c^ch-   in 0 T C_st quad textCharging Cycling Shortage\n    c^ds-   in 0 T C_st quad textDischarging Cycling Shortage\n    z^st ch_t  in 0 P^maxch_st quad textRegularization charge variable\n    z^st ds_t  in 0 P^maxds_st quad textRegularization discharge variable\nendalign*","category":"page"},{"location":"formulation_library/StorageDispatchWithReserves/#Model","page":"StorageDispatchWithReserves","title":"Model","text":"","category":"section"},{"location":"formulation_library/StorageDispatchWithReserves/","page":"StorageDispatchWithReserves","title":"StorageDispatchWithReserves","text":"beginaligned\nmin_substackboldsymbolp^st ch boldsymbolp^st ds boldsymbole^st  e^st+ e^st- c^ch- + c^ds-\n rho^e+ e^st+ + rho^e- e^st- + rho^c left(c^ch- + c^ds- right) + rho^z left(z^ch + z^ds right)\n +Delta t sum_t in mathcalT textVOM_st left ( left(sum_p in mathcalP^textas_textdn R^*_pt sb_stcpt + p^stch_t right) + left(sum_p in mathcalP^textas_textup R^*_pt sb_stdpt + p^stds_tright) right) \nendaligned","category":"page"},{"location":"formulation_library/StorageDispatchWithReserves/","page":"StorageDispatchWithReserves","title":"StorageDispatchWithReserves","text":"beginaligned\ntextst   \ntextPower Limit Constraints\np^st ch_t + sum_p in mathcalP^textas_textdn sb_stcpt leq (1 - textss^st_t)P^maxch_st  quad forall t in mathcalT \n p^st ch_t - sum_p in mathcalP^textas_textup sb_stcpt geq 0  quad forall t in mathcalT\n p^st ds_t + sum_p in mathcalP^textas_textup sb_stdpt leq textss^st_tP^maxds_st  forall t in mathcalT\n p^st ds_t - sum_p in mathcalP^textas_textdn sb_stdpt geq 0  forall t in mathcalT\ntextEnergy Storage Limit Constraints\ne^st_t leq E^max_st  forall t in mathcalT\n e^st_t geq E^min_st  forall t in mathcalT\ntextEnergy Book-keeping constraints\n E^st_0 + Delta t  left(sum_p in mathcalP^textas_textdn R^*_p1 sb_stcp1 + p^stch_1  - sum_p in mathcalP^textas_textup R^*_p1 sb_stcp1right)eta^ch_st\n-Delta tleft(sum_p in mathcalP^textas_textup R^*_p1 sb_stdp1 + p^stds_1 - sum_p in mathcalP^textas_textdn R^*_pt sb_stdp1right)frac1eta^ds_st=e^st_1\ne^st_t-1 + Delta t  left(sum_p in mathcalP^textas_textdn R^*_pt sb_stcpt + p^stch_t  - sum_p in mathcalP^textas_textup R^*_pt sb_stcptright)eta^ch_st\n-Delta tleft(sum_p in mathcalP^textas_textup R^*_pt sb_stdpt + p^stds_t - sum_p in mathcalP^textas_textdn R^*_pt sb_stdptright)frac1eta^ds_st =e^st_t  forall t in mathcalT setminus 1\ntextEnd of period energy target constraint\ne^st_T + e^st+ - e^st- = E^st_T\ntextStorage Cycling Constraints\n sum_t in mathcalT left(sum_p in mathcalP^textas_textup R^*_pt sb_stdpt + p^stds_tright)frac1eta^ds_st Delta t - c^ds- leq C_st E^max_st \n sum_t in mathcalT left(sum_p in mathcalP^textas_textdn R^*_pt sb_stcpt + p^stch_t right)eta^ch_st Delta t - c^ch- leq C_st E^max_st \ntextSingle Ancillary Services Energy Coverage\n sb_stcpt  eta^ch_st N_p Delta t le E_st^max - e^st_t  forall p in mathcalP^as_dn  forall t in mathcalT\n sb_stdpt  frac1eta^ds_st N_p Delta t leq e^st_t- E^min_st  forall p in mathcalP^as_up  forall t in mathcalT\n sb_stcp1  eta^ch_st N_p Delta t le E_st^max - e^st_0  forall p in mathcalP^as_dn\n sb_stcpt  eta^ch_st N_p Delta t le E_st^max - e^st_t-1  forall p in mathcalP^as_dn  forall t in mathcalT setminus 1\nsb_stdp1  frac1eta^ds_st N_p Delta t leq e^st_0 - E^min_st  forall p in mathcalP^as_up\n sb_stdpt  frac1eta^ds_st N_p Delta t leq e^st_t-1 - E^min_st  forall p in mathcalP^as_up  forall t in mathcalT setminus 1 \ntextComplete Ancillary Services Energy Coverage\n sum_p in mathcalP^textas_textdn  sb_stcpt  eta^ch_st N_p Delta t le E_st^max - e^st_t  forall t in mathcalT\n sum_p in mathcalP^textas_textup sb_stdpt  frac1eta^ds_st N_p Delta t leq e^st_t- E^min_st  forall t in mathcalT\n sum_p in mathcalP^textas_textdn sb_stcp1  eta^ch_st N_p Delta t le E_st^max - e^st_0 \nsum_p in mathcalP^textas_textdn  sb_stcpt eta^ch_st N_p Delta t le E_st^max - e^st_t-1  forall t in mathcalT setminus 1\nsum_p in mathcalP^textas_textup sb_stdp1  frac1eta^ds_st N_p Delta t leq e^st_0- E^min_st  \n sum_p in mathcalP^textas_textup sb_stdpt  frac1eta^ds_st N_p Delta t leq e^st_t-1- E^min_st  forall t in mathcalT setminus 1\ntextRegularization Constraints\n left(sum_p in mathcalP^textas_textdn R^*_pt-1 sb_stcpt-1 + p^stch_t-1  - sum_p in mathcalP^textas_textup R^*_pt-1 sb_stcpt-1right) \n - left(sum_p in mathcalP^textas_textdn R^*_pt sb_stcpt + p^stch_t  - sum_p in mathcalP^textas_textup R^*_pt sb_stcptright) le z^st ch_t  forall t in mathcalT setminus 1\n left(sum_p in mathcalP^textas_textdn R^*_pt-1 sb_stcpt-1 + p^stch_t-1  - sum_p in mathcalP^textas_textup R^*_pt-1 sb_stcpt-1right) \n - left(sum_p in mathcalP^textas_textdn R^*_pt sb_stcpt + p^stch_t  - sum_p in mathcalP^textas_textup R^*_pt sb_stcptright) ge -z^st ch_t  forall t in mathcalT setminus 1\nleft(sum_p in mathcalP^textas_textup R^*_pt-1 sb_stdpt-1 + p^stds_t-1 - sum_p in mathcalP^textas_textdn R^*_pt-1 sb_stdpt-1right) \n-left(sum_p in mathcalP^textas_textup R^*_pt sb_stdpt-1 + p^stds_t - sum_p in mathcalP^textas_textdn R^*_pt sb_stdptright) le z^st ds_t   forall t in mathcalT setminus 1\nleft(sum_p in mathcalP^textas_textup R^*_pt-1 sb_stdpt-1 + p^stds_t-1 - sum_p in mathcalP^textas_textdn R^*_pt-1 sb_stdpt-1right) \n-left(sum_p in mathcalP^textas_textup R^*_pt sb_stdpt + p^stds_t - sum_p in mathcalP^textas_textdn R^*_pt sb_stdptright) ge -z^st ds_t   forall t in mathcalT setminus 1\nendaligned","category":"page"}]
}
